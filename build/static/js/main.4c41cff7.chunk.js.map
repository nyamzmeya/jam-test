{"version":3,"sources":["pages/auth/Lock.svg","pages/auth/Email.svg","pages/auth/Form.js","common/api.js","redux/auth-reducer.js","pages/auth/Rectangle 1.svg","pages/auth/AuthPage.js","redux/reg-reducer.js","redux/test-reducer.js","redux/redux-store.js","pages/registration/Man.svg","pages/registration/RegForm.js","pages/registration/RegPage.js","pages/home/Rectangle 1.svg","pages/home/default.svg","pages/home/Vector (4).svg","pages/home/home.svg","pages/home/img1.svg","pages/home/img2.svg","pages/home/like.svg","pages/home/clock.svg","pages/home/fire.svg","pages/home/Status.js","pages/home/Tests.js","pages/home/Layout.js","pages/home/Home.js","pages/tests/hol/Intro.js","pages/tests/hol/Ques.js","pages/tests/hol/questions.js","pages/tests/hol/Hol.js","pages/tests/usk/Intro.js","pages/tests/usk/Ques.js","pages/tests/usk/questions.js","pages/tests/usk/Usk.js","pages/tests/gatb/Intro.js","pages/tests/gatb/icons/cat_icon.svg","pages/tests/gatb/icons/dogs_icon.svg","pages/tests/gatb/Ques.js","pages/tests/gatb/questions.js","pages/tests/gatb/Gatb.js","App.js","reportWebVitals.js","index.js"],"names":["AuthForm","props","name","onFinish","values","handleSubmit","Item","style","width","marginBottom","label","src","email","validateStatus","errors","help","rules","type","placeholder","paddingTop","paddingBottom","lock","password","Password","htmlType","className","instance","require","create","baseURL","authApi","post","regApi","data","testApi","token","get","headers","Authorization","id","body","initialState","isAuth","setErrors","status","authReducer","state","action","connect","authPage","Login","form","dispatch","a","responce","setAuth","localStorage","setItem","response","request","errorObject","console","log","to","img","isReg","regReducer","tests","sets","hol_answ","usk_answ","gatb_answ","getTests","forEach","i","set","progress","ended_at","newRes","e","push","quiz","setSetDone","time","setProgress","setTime","setStatus","testReducer","answ","map","t","reducers","combineReducers","regPage","home","store","createStore","applyMiddleware","thunk","RegForm","Object","fromEntries","entries","filter","key","man","height","Group","noStyle","required","message","float","hasFeedback","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","valuePropName","marginLeft","_","Error","href","Reg","Status","all","length","completed","in_progress","expired","like","verticalAlign","marginTop","marginRight","clock","fire","Tests","columns","title","dataIndex","render","text","record","Date","parse","toISOString","slice","handleStatus","percent","rowKey","this","dataSource","React","Component","Header","Layout","Sider","Content","Wrapper","background","boxShadow","logo","getItem","avatar","minHeight","img1","img2","vector","padding","Home","Intro","test","Button","Ques","navigate","useNavigate","Math","round","numer_of_question","numer_of_questions","display","index","setHol","next_test","ques","answers","left","right","questions","question","Step","Steps","Holland","params","useParams","parseInt","StepEl","q","current_number","findIndex","s","current","setHolAnswers","Hol","setUsk","U","setUskAnswers","Usk","onClick","setCount","useState","active","setActive","done","setDone","setGatb","result","isActive","window","onImgClick","currentTarget","dataset","icon","wrapper","checkActive","includes","cat","dog","setGatbAnswers","count","isPlaying","onComplete","duration","colors","remainingTime","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"0WAAe,MAA0B,iCCA1B,MAA0B,kC,OC6C1BA,EAzCE,SAACC,GAKhB,OACE,eAAC,IAAD,CAAMC,KAAK,QAAQC,SALJ,SAACC,GAChBH,EAAMI,aAAaD,IAInB,UACE,cAAC,IAAKE,KAAN,CACAC,MAAO,CAACC,MAAO,OAAQC,aAAc,QACnCC,MAAO,qBAAKC,IAAKC,IACjBV,KAAK,QACLW,eAAgBZ,EAAMa,OAAOF,MAAQ,QAAU,aAC/CG,KAAMd,EAAMa,OAAOF,MAAQX,EAAMa,OAAOF,MAAQ,GAChDI,MAAO,CACL,CACEC,KAAM,UARZ,SAYE,cAAC,IAAD,CAAOC,YAAY,mBAAmBX,MAAO,CAACY,WAAY,OAAQC,cAAe,YAGnF,cAAC,IAAKd,KAAN,CACAC,MAAO,CAACC,MAAO,OAAQC,aAAc,QACnCC,MAAO,qBAAKC,IAAKU,IACjBnB,KAAK,WACLW,eAAgBZ,EAAMa,OAAOQ,SAAW,QAAU,aAClDP,KAAMd,EAAMa,OAAOQ,SAAWrB,EAAMa,OAAOQ,SAAW,GALxD,SAOE,cAAC,IAAMC,SAAP,CAAgBL,YAAY,mDAAWX,MAAO,CAACY,WAAY,OAAQC,cAAe,YAGpF,cAAC,IAAKd,KAAN,UACE,cAAC,IAAD,CAAQW,KAAK,UAAUO,SAAS,SAASC,UAAU,UAAnD,kD,wCCnCFC,EAFQC,EAAQ,KAECC,OAAO,CAC5BC,QAAS,kCAGEC,EAAU,SACflB,EAAOU,GACX,OAAOI,EAASK,KAAK,sBAAuB,CAAEnB,QAAOU,cAI5CU,EAAS,SAChBC,GACF,OAAOP,EAASK,KAAK,6BAAd,eAAiDE,KAI/CC,EAAU,SACZC,GACP,OAAOT,EAASU,IAAI,2BAA4B,CAC9CC,QAAS,CACPC,cAAc,UAAD,OAAYH,OAJpBD,EAAU,SAQbK,EAAIJ,GACV,OAAOT,EAASU,IAAT,mCAAyCG,GAAM,CACpDF,QAAS,CACPC,cAAc,UAAD,OAAYH,OAXpBD,EAAU,SAgBdK,EAAIJ,EAAOK,GAChB,OAAOd,EAASK,KAAT,mCAA0CQ,EAA1C,gBAA4DC,EAAM,CACvEH,QAAS,CACPC,cAAc,UAAD,OAAYH,OAnBpBD,EAAU,SAwBdK,EAAIJ,EAAOK,GAChB,OAAOd,EAASK,KAAT,mCAA0CQ,EAA1C,gBAA4DC,EAAM,CACvEH,QAAS,CACPC,cAAc,UAAD,OAAYH,OA3BpBD,EAAU,SAgCbK,EAAIJ,EAAOK,GACjB,OAAOd,EAASK,KAAT,mCACuBQ,EADvB,mBAELC,EACA,CACEH,QAAS,CACPC,cAAc,UAAD,OAAYH,O,cCtD/BM,EAAe,CACjBC,QAAQ,EACR9B,MAAO,KACPE,OAAQ,GACRqB,MAAO,MA+BHQ,EAAY,SAAC7B,EAAQ8B,GACzB,MAAO,CACL3B,KAAM,SACNH,OAAQA,EACR4B,OAAQE,IAqBGC,EArDK,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACpD,OAAQA,EAAO9B,MACb,IAAK,OACH,OAAO,uCACF6B,GACAC,EAAOd,MAFZ,IAGES,OAAQK,EAAOL,SAEnB,IAAK,SACH,OAAO,2BACFI,GADL,IAEEhC,OAAQiC,EAAOjC,OACf4B,OAAQK,EAAOL,SAGnB,QACE,OAAOI,ICzBE,MAA0B,wCC8C1BE,eAJS,SAACF,GACvB,MAAO,CAAEJ,OAAQI,EAAMG,SAASP,OAAQ5B,OAAQgC,EAAMG,SAASnC,UAGzB,CAAEoC,MFDrB,SAACC,GAAD,8CAAU,WAAOC,GAAP,mBAAAC,EAAA,+EAENvB,EAAcqB,EAAKvC,MAAOuC,EAAK7B,UAFzB,OAEvBgC,EAFuB,OAG3BF,GAnBaxC,EAmBIuC,EAAKvC,MAnBFuB,EAmBSmB,EAASrB,KAAKE,MAlBtC,CACLlB,KAAM,OACNgB,KAAM,CAAErB,QAAOuB,SACfO,YAeSa,KACTC,aAAaC,QAAQ,QAASH,EAASrB,KAAKE,OAC5CqB,aAAaC,QAAQ,QAASN,EAAKvC,OACnCwC,EAAST,EAAU,IAAI,IANI,kDAQnBe,EARmB,KAQnBA,SAC4BA,EAA5BC,QACmB,OADPC,EATO,YASSF,EATT,IAUXd,QACdQ,EAAST,EAAUiB,EAAY3B,MAAM,IAEvC4B,QAAQC,IAAR,MAb2B,kCAhBf,IAAClD,EAAOuB,IAgBO,qBAAV,wDECNa,EAtCE,SAAC/C,GAEhB,OAAIA,EAAMyC,OACD,cAAC,IAAD,CAAUqB,GAAG,UAIpB,sBAAKtC,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKd,IAAKqD,IACV,qBAAKvC,UAAU,QAAf,0GACA,sBAAKA,UAAU,SAAf,+VAEc,OAEd,qBAAKA,UAAU,QAAf,gTAGA,wBAAQA,UAAU,MAAlB,SACE,cAAC,IAAD,CAAMsC,GAAG,IAAT,+DAIN,qBAAKtC,UAAU,OAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,gFACA,cAAC,EAAD,CAAUpB,aAAcJ,EAAMiD,MAAOpC,OAAQb,EAAMa,oB,gCChCzD2B,EAAe,CACjBwB,OAAO,EACPnD,OAAQ,IA+BJ6B,EAAY,SAAC7B,EAAQ8B,GACzB,MAAO,CACL3B,KAAM,SACNH,OAAQA,EACRmD,MAAOrB,IAmBIsB,EAnDI,WAAmC,IAAlCpB,EAAiC,uDAAzBL,EAAcM,EAAW,uCACnD,OAAQA,EAAO9B,MACb,IAAK,MACH,OAAO,uCACF6B,GACAC,EAAOd,MAFZ,IAGEgC,MAAOlB,EAAOkB,QAElB,IAAK,SACH,OAAO,2BACFnB,GADL,IAEEhC,OAAQiC,EAAOjC,OACfmD,MAAOlB,EAAOkB,QAGlB,QACE,OAAOnB,I,8BCtBTL,EAAe,CACjB0B,MAAO,GACPrD,OAAQ,KACRsD,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,UAAW,IAgFP5B,EAAY,SAAC7B,GACjB,MAAO,CACLG,KAAM,SACNH,OAAQA,IAwDC0D,EAAW,SAACrC,GAAD,8CAAW,WAAOiB,GAAP,mBAAAC,EAAA,+EAEVnB,EAAiBC,GAFP,QAE3BmB,EAF2B,QAGtBrB,KAAKwC,QAAd,uCAAsB,WAAOC,GAAP,qBAAArB,EAAA,6DACpBqB,EAAEC,IAAM,GACRD,EAAEE,SAAW,EACbF,EAAEG,SAAW,KAHO,SAID3C,EAAgBwC,EAAEnC,GAAIJ,GAJrB,OAIhB2C,EAJgB,qBAKNA,EAAO7C,MALD,IAKpB,2BAAS8C,EAAkB,QACzBL,EAAEC,IAAIK,KAAKD,EAAEE,MANK,8BAQpB7B,EA9DG,CACLnC,KAAM,WACNgB,KA4DmB6C,EAAO7C,OARJ,2CAAtB,uDAUAmB,EA9EK,CACLnC,KAAM,YACNgB,KA4EkBqB,EAASrB,OAC3BmB,EAAST,EAAU,KAdY,gDAgB/BkB,QAAQC,IAAR,MACQJ,EAjBuB,KAiBvBA,SAC4BA,EAA5BC,QACmB,OADPC,EAlBW,YAkBKF,EAlBL,IAmBfd,QACdQ,EAAST,EAAUiB,EAAY3B,OApBF,yDAAX,uDAoDXiD,EAAa,SAAC3C,EAAIqC,EAAUO,EAAMvC,GAArB,OAAgC,SAACQ,GACzDS,QAAQC,IAAIvB,EAAIqC,EAAUO,GAC1B/B,EA9EkB,SAACb,EAAIqC,GACvB,MAAO,CACL3D,KAAM,eACNsB,GAAIA,EACJqC,SAAUA,GA0EHQ,CAAY7C,EAAIqC,IACzBxB,EAvEc,SAACb,EAAI4C,GACnB,MAAO,CACLlE,KAAM,WACNsB,GAAIA,EACJ4C,KAAMA,GAmECE,CAAQ9C,EAAI4C,IACrB/B,EAhEgB,SAACb,EAAIK,GACrB,MAAO,CACL3B,KAAM,aACNsB,GAAIA,EACJK,OAAQA,GA4DD0C,CAAU/C,EAAIK,MAGV2C,EAnMK,WAAmC,IAAlCzC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACpD,OAAQA,EAAO9B,MACb,IAAK,YACH,OAAO,2BACF6B,GADL,IAEEqB,MAAOpB,EAAOd,OAElB,IAAK,WACH,OAAO,2BACFa,GADL,IAEEsB,KAAK,GAAD,mBAAMtB,EAAMsB,MAAZ,CAAkBrB,EAAOd,SAEjC,IAAK,UACH,OAAO,2BACFa,GADL,IAEEuB,SAAS,GAAD,mBAAMvB,EAAMuB,UAAZ,CAAsBtB,EAAOyC,SAEzC,IAAK,UACH,OAAO,2BACF1C,GADL,IAEEwB,SAAS,GAAD,mBAAMxB,EAAMwB,UAAZ,CAAsBvB,EAAOyC,SAEvC,IAAK,WACH,OAAO,2BACF1C,GADL,IAEEyB,UAAU,GAAD,mBAAMzB,EAAMyB,WAAZ,CAAuBxB,EAAOyC,SAE7C,IAAK,SACH,OAAO,2BACF1C,GADL,IAEEhC,OAAQiC,EAAOjC,SAEnB,IAAK,eACH,OAAO,2BACFgC,GADL,IAEEqB,MAAOrB,EAAMqB,MAAMsB,KAAI,SAACC,GACtB,OAAIA,EAAEnD,KAAOQ,EAAOR,IAClBsB,QAAQC,IAAI4B,EAAEnD,IACP,2BAAKmD,GAAZ,IAAed,SAAU7B,EAAO6B,YAE3Bc,OAGb,IAAK,WACH,OAAO,2BACF5C,GADL,IAEEqB,MAAOrB,EAAMqB,MAAMsB,KAAI,SAACC,GACtB,OAAIA,EAAEnD,KAAOQ,EAAOR,GACX,2BAAKmD,GAAZ,IAAeb,SAAU9B,EAAOoC,OAE3BO,OAIX,IAAK,aACL,OAAO,2BACF5C,GADL,IAEEqB,MAAOrB,EAAMqB,MAAMsB,KAAI,SAACC,GACtB,OAAIA,EAAEnD,KAAOQ,EAAOR,GACX,2BAAKmD,GAAZ,IAAe9C,OAAQG,EAAOH,SAEzB8C,OAIb,QACE,OAAO5C,ICvET6C,GAAWC,YAAgB,CAC7B3C,SAAUJ,EACVgD,QAAS3B,EACT4B,KAAMP,IAKOQ,GAFHC,YAAYL,GAAUM,YAAgBC,M,iCCZnC,OAA0B,gCCgJ1BC,GA1IC,SAAClG,GAWf,OACE,eAAC,IAAD,CAAMC,KAAK,QAAQC,SAXN,SAACC,GACd,IAAI6B,EAAOmE,OAAOC,YAChBD,OAAOE,QAAQlG,GAAQmG,QACrB,gBAAEC,EAAF,2BAAmB,cAARA,GAA+B,YAARA,MAItCvG,EAAMI,aAAa4B,IAInB,UACE,cAAC,IAAK3B,KAAN,CACEI,MAAO,qBAAKC,IAAK8F,KACjBlG,MAAO,CAAEmG,OAAQ,OAAQjG,aAAc,OAAQD,MAAO,QAFxD,SAIE,eAAC,IAAMmG,MAAP,WACE,cAAC,IAAKrG,KAAN,CACEJ,KAAK,YACL0G,SAAO,EACPrG,MAAO,CAACC,MAAO,QACfQ,MAAO,CAAC,CAAE6F,UAAU,EAAMC,QAAS,0BAJrC,SAME,cAAC,IAAD,CACEvG,MAAO,CAAEC,MAAO,OAAQkG,OAAQ,OAAQjG,aAAc,OACtDS,YAAY,iDAGhB,cAAC,IAAKZ,KAAN,CACEJ,KAAK,aACL0G,SAAO,EACP5F,MAAO,CAAC,CAAE6F,UAAU,EAAMC,QAAS,2BAHrC,SAKE,cAAC,IAAD,CAAOvG,MAAO,CAAEC,MAAO,MAAOkG,OAAQ,QAAUxF,YAAY,yBAE9D,cAAC,IAAKZ,KAAN,CACEJ,KAAK,aACL0G,SAAO,EACP5F,MAAO,CAAC,CAAE6F,UAAU,EAAMC,QAAS,2BAHrC,SAKE,cAAC,IAAD,CACEvG,MAAO,CAAEC,MAAO,MAAOkG,OAAQ,OAAQK,MAAO,SAC9C7F,YAAY,4DAMpB,cAAC,IAAKZ,KAAN,CACEC,MAAO,CAAEE,aAAc,OAAQiG,OAAQ,OAAQlG,MAAO,QACtDE,MAAO,qBAAKC,IAAKC,IACjBV,KAAK,QACLW,eAAgBZ,EAAMa,OAAOF,MAAQ,QAAU,aAC/CG,KAAMd,EAAMa,OAAOF,MAAQX,EAAMa,OAAOF,MAAQ,GAChDI,MAAO,CACL,CACEC,KAAM,QACN4F,UAAU,EACVC,QAAS,sBAVf,SAcE,cAAC,IAAD,CAAO5F,YAAY,mBAAmBX,MAAO,CAAEmG,OAAQ,YAGzD,cAAC,IAAKpG,KAAN,CACEI,MAAO,qBAAKC,IAAKU,IACjBd,MAAO,CAAEmG,OAAQ,OAAQjG,aAAc,MAAQD,MAAO,QAFxD,SAIE,eAAC,IAAMmG,MAAP,CAAapG,MAAO,CAAEmG,OAAQ,QAA9B,UACE,cAAC,IAAKpG,KAAN,CACE0G,aAAW,EACXzG,MAAO,CAAEmG,OAAQ,OAAQjG,aAAc,MAAQD,MAAO,QACtDN,KAAK,WACLW,eAAgBZ,EAAMa,OAAOQ,SAAW,QAAU,aAClDP,KAAMd,EAAMa,OAAOQ,SAAWrB,EAAMa,OAAOQ,SAAW,GALxD,SAOE,cAAC,IAAMC,SAAP,CAAgBhB,MAAO,CAAEmG,OAAQ,YAEnC,cAAC,IAAKpG,KAAN,CACE0G,aAAW,EACXzG,MAAO,CAAEmG,OAAQ,OAAQjG,aAAc,MAAOD,MAAO,QACrDyG,aAAc,CAAC,YACf/G,KAAK,UACLc,MAAO,CACL,CACE6F,UAAU,EACVC,QAAS,iCAEX,gBAAGI,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAMC,GACd,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACb,oDAHOD,QAAQE,cAbzB,SAsBE,cAAC,IAAMjG,SAAP,CAAgBhB,MAAO,CAAEmG,OAAQ,iBAKvC,cAAC,IAAKpG,KAAN,CACEJ,KAAK,YACLuH,cAAc,UACdlH,MAAO,CAAEmH,WAAY,OAAQlH,MAAO,QACpCQ,MAAO,CACL,CACE6F,UAAU,EACVM,UAAW,SAACQ,EAAGN,GAAJ,OACTA,EACIC,QAAQE,UACRF,QAAQC,OAAO,IAAIK,MAAM,+BAVrC,SAcE,eAAC,KAAD,8DACW,IACT,mBAAGC,KAAK,GAAR,qVAMJ,cAAC,IAAKvH,KAAN,UACE,cAAC,IAAD,CAAQW,KAAK,UAAUO,SAAS,SAASC,UAAU,UAAnD,8DC5FOuB,gBAJS,SAACF,GACvB,MAAO,CAAEmB,MAAOnB,EAAM+C,QAAQ5B,MAAOnD,OAAQgC,EAAM+C,QAAQ/E,UAGrB,CAAEgH,ILAvB,SAAC3E,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,+EAGJrB,EAAWmB,GAHP,cAIzBC,EAnBK,CACLnC,KAAM,MACNgB,KAiBgBkB,EAhBhBc,OAAO,IAiBPb,EAAST,EAAU,IAAI,IALE,gDAOjBe,EAPiB,KAOjBA,SAC4BA,EAA5BC,QACmB,OADPC,EARK,YAQWF,EARX,IASTd,QACdQ,EAAST,EAAUiB,EAAY3B,MAAM,IAVd,yDAAV,wDKAJe,EApCC,SAAC/C,GACf,OAAIA,EAAMgE,MACD,cAAC,IAAD,CAAUF,GAAG,UAGpB,sBAAKtC,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKd,IAAKqD,IACV,qBAAKvC,UAAU,QAAf,0GACA,sBAAKA,UAAU,SAAf,+VAEc,OAEd,qBAAKA,UAAU,QAAf,oSAGA,wBAAQA,UAAU,MAAlB,SACE,cAAC,IAAD,CAAMsC,GAAG,QAAT,mDAIN,qBAAKtC,UAAU,OAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,gFACA,cAAC,GAAD,CAASpB,aAAcJ,EAAM6H,IAAKhH,OAAQb,EAAMa,oB,UCjC3C,OAA0B,wCCA1B,OAA0B,oCCA1B,OAA0B,uCCA1B,OAA0B,iCCA1B,OAA0B,iCCA1B,OAA0B,iCCA1B,I,OAAA,IAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,iCCmE1BiH,GA9DA,SAAC9H,GACd,IAAM+H,EAAM/H,EAAMkE,MAAM8D,OAClBC,EAAYjI,EAAMkE,MAAMoC,QAAO,SAACb,GAAD,MAAmB,aAAZA,EAAE9C,UAAuBqF,OAC/DE,EAAclI,EAAMkE,MAAMoC,QAC9B,SAACb,GAAD,MAAmB,eAAZA,EAAE9C,UACTqF,OACIG,EAAUnI,EAAMkE,MAAMoC,QAAO,SAACb,GAAD,MAAmB,WAAZA,EAAE9C,UAAqBqF,OACjE,OACE,qBAAIxG,UAAU,SAAd,UACE,mIAEE,qBAAKA,UAAU,MAAf,SAAsBuG,OAGxB,kFAEE,sBAAKvG,UAAU,MAAf,UACE,qBACEd,IAAK0H,GACL9H,MAAO,CACL+H,cAAe,MACfC,UAAW,MACXC,YAAa,SAGhBN,QAIL,yFAEE,sBAAKzG,UAAU,MAAf,UACE,qBACEd,IAAK8H,GACLlI,MAAO,CACL+H,cAAe,MACfC,UAAW,MACXC,YAAa,SAGhBL,QAIL,kFAEE,sBAAK1G,UAAU,MAAf,UACE,qBACEd,IAAK+H,GACLnI,MAAO,CACL+H,cAAe,MACfC,UAAW,MACXC,YAAa,SAGhBJ,Y,8BCtDLO,G,4MAkBJC,QAAU,CACR,CACEC,MAAO,2BACPC,UAAW,KACXtC,IAAK,MAEP,CACEqC,MAAO,mDACPC,UAAW,MACXtC,IAAK,MAAMuC,OAAQ,SAACC,EAAMC,GAAP,OACjB,cAAC,KAAD,UAAQA,EAAOtE,QAGnB,CACEkE,MAAO,qEACPC,UAAW,KACXtC,IAAK,KACLuC,OAAQ,SAACC,GAAD,OAAU,4BAAIA,MAExB,CACEH,MAAO,qEACPC,UAAW,aACXtC,IAAK,aACLuC,OAAQ,SAACC,GAAD,OACN,cAAC,KAAD,UAAQ,IAAIE,KAAKA,KAAKC,MAAMH,IAAOI,cAAcC,MAAM,EAAG,QAG9D,CACER,MAAO,+DACPC,UAAW,WACXtC,IAAK,WACLuC,OAAQ,SAACC,GAAD,OACN,cAAC,KAAD,UAAgB,MAARA,EAAe,WAAaA,EAAKI,cAAcC,MAAM,EAAG,QAGpE,CACER,MAAO,yDACPC,UAAW,SACXtC,IAAK,SACLuC,OAAQ,SAACC,GAAD,OAAU,EAAKM,aAAaN,KAEtC,CACEH,MAAO,mDACPC,UAAW,WACXtC,IAAK,WAAWuC,OAAQ,SAACC,GAAD,OACtB,cAAC,KAAD,CAAUO,QAASP,GAAQ,MAG/B,CACEH,MAAO,mDACPE,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,KAAD,WACE,cAAC,IAAD,CACElF,GACE,EAAK9D,MAAMmE,KAAK6E,EAAO1G,GAAK,GAA5B,WACQ0G,EAAO1G,GADf,YACqB,EAAKtC,MAAMmE,KAAK6E,EAAO1G,GAAK,GAAG,GAAG0C,KADvD,MAEI,GAENxD,UAA4B,WAAjBwH,EAAOrG,QAAwC,aAAjBqG,EAAOrG,OAAwB,gBAAkB,GAN5F,wDAUA,+DACA,cAAC,IAAD,CACEmB,GAAG,IACHtC,UAA4B,aAAjBwH,EAAOrG,OAAwB,GAAK,gBAFjD,0E,kDA7ER,SAAaA,GACX,OAAQA,GACN,IAAK,UACH,OAAO,oBAAInB,UAAU,YAAd,+DACT,IAAK,cACH,OAAO,oBAAIA,UAAU,aAAd,qEACT,IAAK,YACH,OAAO,oBAAIA,UAAU,cAAd,oEACT,QACE,OAAO,oBAAIA,UAAU,aAAd,iE,oBA+Eb,WACE,OACE,cAAC,KAAD,CACE+H,OAAQ,SAACP,GAAD,OAAYA,EAAO1G,IAC3BqG,QAASa,KAAKb,QACdc,WAAYD,KAAKxJ,MAAMkE,MACvB1C,UAAU,c,GAlGEkI,IAAMC,WA+GX5G,gBAPS,SAACF,GACvB,MAAO,CACLqB,MAAOrB,EAAMgD,KAAK3B,MAClBC,KAAMtB,EAAMgD,KAAK1B,QAImB,GAAzBpB,CAA6B2F,ICzGpCkB,GAA2BC,KAA3BD,OAAQE,GAAmBD,KAAnBC,MAAOC,GAAYF,KAAZE,QAuERC,GArEC,SAAChK,GACf,OACE,eAAC,KAAD,WACE,eAAC4J,GAAD,CACEtJ,MAAO,CACL2J,WAAY,UACZC,UAAW,oCAEb1I,UAAU,SALZ,UAOE,sBAAKA,UAAU,OAAf,UACE,qBAAKd,IAAKyJ,GAAM7J,MAAO,CAAEiI,YAAa,UACtC,+CAGF,sBAAK/G,UAAU,SAAf,UACE,8BAAMxB,EAAMW,OAAS4C,aAAa6G,QAAQ,WAC1C,qBAAK1J,IAAK2J,GAAQ/J,MAAO,CAAEmH,WAAY,eAG3C,eAAC,KAAD,WACE,eAACqC,GAAD,CACEvJ,MAAO,IACPD,MAAO,CACLgK,UAAW,QACXL,WAAY,UACZC,UAAW,kCAEb1I,UAAU,QAPZ,UASE,sBAAKA,UAAU,UAAf,UACE,qBAAKd,IAAKmF,GAAMvF,MAAO,CAAEiI,YAAa,UACtC,uIAGF,sBAAK/G,UAAU,UAAf,UACE,qBAAKA,UAAU,MAAf,oEACA,gCACE,qBACEd,IAAK6J,GACLjK,MAAO,CAAEiI,YAAa,OAAQ/H,aAAc,UAE9C,iFAGF,gCACE,qBAAKE,IAAK8J,GAAMlK,MAAO,CAAEiI,YAAa,UACtC,2EAIN,eAACwB,GAAD,WACE,sBAAKvI,UAAU,WAAf,UACE,oIACA,oIACA,qBAAKd,IAAK+J,QAGZ,eAACV,GAAD,CAASzJ,MAAO,CAACoK,QAAS,aAA1B,UACE,cAAC,GAAD,CAAQxG,MAAOlE,EAAMkE,QACrB,cAAC,GAAD,iBCrENyG,G,uKACJ,WACE/G,QAAQC,IAAI,WACmB,GAA3B2F,KAAKxJ,MAAMkE,MAAM8D,SACnBpE,QAAQC,IAAI,SACZ2F,KAAKxJ,MAAMuE,SAASiF,KAAKxJ,MAAMkC,OAASqB,aAAa6G,QAAQ,a,oBAIjE,WACE,OAAO,cAAC,GAAD,CAASzJ,MAAO6I,KAAKxJ,MAAMW,MAAOuD,MAAOsF,KAAKxJ,MAAMkE,Y,GAV5CwF,IAAMC,WAwBV5G,gBAVS,SAACF,GACvB,MAAO,CACLX,MAAOW,EAAMG,SAASd,MACtBrB,OAAQgC,EAAMgD,KAAKhF,OACnBF,MAAOkC,EAAMG,SAASrC,MACtBuD,MAAOrB,EAAMgD,KAAK3B,MAClBC,KAAMtB,EAAMgD,KAAK1B,QAImB,CAAEI,YAA3BxB,CAAuC4H,I,oBCMvCC,I,MA/BD,SAAC5K,GACb,OACE,gCACE,qBAAKwB,UAAU,SAAf,kDAAkCxB,EAAM6K,QACxC,qBAAKrJ,UAAU,SAAf,oVAIA,8BACE,cAAC,IAAKnB,KAAN,UACE,eAAC,KAAMqG,MAAP,WACE,cAAC,KAAMoE,OAAP,qEACA,cAAC,KAAMA,OAAP,yFAIN,qBAAKtJ,UAAU,SAAf,0UAIA,qBAAKA,UAAU,SAAf,skBAIA,cAAC,IAAD,CAAQR,KAAK,UAAb,SACE,cAAC,IAAD,CAAM8C,GAAE,WAAM9D,EAAM6K,KAAZ,UAAR,mFC8BOE,GAvDF,SAAC/K,GACZ,IAAIgL,EAAWC,cAEXtG,EAAWuG,KAAKC,MACjBnL,EAAMoL,kBAAoBpL,EAAMqL,mBAAsB,KAiBzD,OACE,qCACE,qBAAK7J,UAAU,YAAf,oOAEA,cAAC,KAAD,CACElB,MAAO,CACLC,MAAO,QACPkH,WAAY,OACZc,YAAa,OACb+C,QAAS,QACT9K,aAAc,QAEhB8I,QAAS3E,IAGX,eAAC,IAAD,CAAMzE,SA9BO,SAACkH,GAChBA,EAAMmE,MAAQvL,EAAMoL,kBACpBpL,EAAMwL,OAAOxL,EAAMsC,GAAItC,EAAMkC,MAAO,CAACkF,IAGjCpH,EAAMoL,oBAAsBpL,EAAMqL,mBACpCL,EAAS,IAAD,OAAKhL,EAAMsC,GAAX,gBAAqBtC,EAAMoL,kBAAoB,IAC9CpL,EAAMoL,oBAAsBpL,EAAMqL,oBAAsBrL,EAAMyL,UACvET,EAAS,IAAD,OAAKhL,EAAMsC,GAAX,YAAiBtC,EAAMyL,UAAUzG,KAAjC,QAERhF,EAAMiF,WAAWjF,EAAMsC,GAAI,IAAK,IAAI2G,KAAQ,aAC5C+B,EAAS,WAmBT,UACE,cAAC,IAAK3K,KAAN,CAAWJ,KAAK,OAAOc,MAAO,CAAC,CAAE6F,UAAU,EAAMC,QAAS,mKAA1D,SACE,eAAC,KAAMH,MAAP,WACE,cAAC,KAAMoE,OAAP,CAAc1D,MAAOpH,EAAM0L,KAAKC,QAAQC,KAAK3L,KAA7C,SACGD,EAAM0L,KAAKC,QAAQC,KAAK7C,OAE3B,cAAC,KAAM+B,OAAP,CAAc1D,MAAOpH,EAAM0L,KAAKC,QAAQE,MAAM5L,KAA9C,SACGD,EAAM0L,KAAKC,QAAQE,MAAM9C,YAIhC,cAAC,IAAD,CAAQ/H,KAAK,UAAUO,SAAS,SAAhC,iFCNOuK,GA7CC,CACd,CACEP,MAAO,EACPQ,SAAU,0KACVJ,QAAS,CACPC,KAAM,CACJ3L,KAAM,IACN8I,KAAM,sEAER8C,MAAO,CACL5L,KAAM,IACN8I,KAAM,sDAIZ,CACEwC,MAAO,EACPQ,SAAU,0KACVJ,QAAS,CACPC,KAAM,CACJ3L,KAAM,IACN8I,KAAM,kCAER8C,MAAO,CACL5L,KAAM,IACN8I,KAAM,kEAIZ,CACEwC,MAAO,EACPQ,SAAU,0KACVJ,QAAS,CACPC,KAAM,CACJ3L,KAAM,IACN8I,KAAM,oDAER8C,MAAO,CACL5L,KAAM,IACN8I,KAAM,6GC3BNiD,GAASC,KAATD,KAER,SAASE,GAAQlM,GAGf,IAAImM,EAASC,cAETvB,EAAOwB,SAASF,EAAOtB,MAEvBa,EAAOW,SAASF,EAAOT,MACvBY,EAASR,GAAUtG,KAAI,SAAC+G,GAC1B,OAAO,cAACP,GAAD,aAAcO,EAAEhB,WAGrBiB,EAAsC,GAArBxM,EAAMmE,KAAK6D,OAAehI,EAAMmE,KAAK0G,EAAO,GAAG4B,WAAU,SAACC,GAAD,MAAiB,OAAVA,EAAE1H,QAAiB,EACpGyG,EAAiC,GAArBzL,EAAMmE,KAAK6D,OAAchI,EAAMmE,KAAK0G,EAAO,GAAG2B,EAAiB,GAAK,EAEpF,OACE,qCACE,sBAAKhL,UAAU,OAAf,UACE,qBAAKd,IAAKyJ,KACV,eAAC,KAAD,CAAOwC,QAASjB,EAAhB,UACE,cAACM,GAAD,IACCM,QAGI,GAARZ,EACC,cAAC,GAAD,CAAOb,KAAMA,IAEb,cAAC,GAAD,CACEQ,mBAAoBS,GAAU9D,OAC9BoD,kBAAmBM,EACnBA,KAAMI,GAAUJ,EAAO,GACvBF,OAAQxL,EAAM4M,cACdtK,GAAIuI,EACJ3I,MAAOlC,EAAMkC,OAASqB,aAAa6G,QAAQ,SAC3CqB,UAAWA,EACXxG,WAAYjF,EAAMiF,gB,IAStB4H,G,4JAGJ,WACE,OACE,cAACX,GAAD,eAAa1C,KAAKxJ,Y,GALN0J,IAAMC,WAcT5G,gBAJS,SAACF,GACvB,MAAO,CAAEX,MAAOW,EAAMG,SAASd,MAAOiC,KAAMtB,EAAMgD,KAAK1B,QAGjB,CAAEyI,crBoGb,SAACtK,EAAIJ,EAAOK,GAAZ,8CAAqB,WAAOY,GAAP,SAAAC,EAAA,+EAEzBnB,EAAeK,EAAIJ,EAAOK,GAFD,cAG9CY,EAxEK,CACLnC,KAAM,UACNuE,KAsEgBhD,IAH8B,gDAK9CqB,QAAQC,IAAR,MAL8C,yDAArB,uDqBpG4BU,WAAUU,cAApDlC,CAAkE8J,IC3ClEjC,GAzBD,SAAC5K,GACb,OACE,gCACE,qBAAKwB,UAAU,SAAf,kDAAkCxB,EAAM6K,QACxC,qBAAKrJ,UAAU,SAAf,ylBAKA,qBAAKA,UAAU,SAAf,2dAKA,qBAAKA,UAAU,SAAf,skBAIA,cAAC,IAAD,CAAQR,KAAK,UAAb,SACE,cAAC,IAAD,CAAM8C,GAAE,WAAM9D,EAAM6K,KAAZ,UAAR,kFCgDOE,I,OAnEF,SAAC/K,GACZ,IAAIgL,EAAWC,cAEXtG,EAAWuG,KAAKC,MACjBnL,EAAMoL,kBAAoBpL,EAAMqL,mBAAsB,KAmBzD,OACE,qCACE,qBAAK7J,UAAU,YAAf,2JAEA,cAAC,KAAD,CACElB,MAAO,CACLC,MAAO,QACPkH,WAAY,OACZc,YAAa,OACb+C,QAAS,QACT9K,aAAc,QAEhB8I,QAAS3E,IAGX,eAAC,IAAD,CAAMzE,SAhCO,SAACkH,GAChBA,EAAMmE,MAAQvL,EAAMoL,kBACpBpL,EAAM8M,OAAO9M,EAAMsC,GAAItC,EAAMkC,MAAO,CAACkF,IAEjCpH,EAAMoL,oBAAsBpL,EAAMqL,mBACpCL,EAAS,IAAD,OAAKhL,EAAMsC,GAAX,gBAAqBtC,EAAMoL,kBAAoB,IAEvDpL,EAAMoL,oBAAsBpL,EAAMqL,oBAClCrL,EAAMyL,UAENT,EAAS,IAAD,OAAKhL,EAAMsC,GAAX,YAAiBtC,EAAMyL,UAAUzG,KAAjC,QAERhF,EAAMiF,WAAWjF,EAAMsC,GAAI,IAAK,IAAI2G,KAAQ,aAC5C+B,EAAS,WAmBT,UACE,sBAAKxJ,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBxB,EAAM0L,KAAKK,WAClC,cAAC,IAAK1L,KAAN,CAAWJ,KAAK,OAAOc,MAAO,CAAC,CAAE6F,UAAU,EAAMC,QAAS,mKAA1D,SACE,eAAC,KAAMH,MAAP,CAAalF,UAAU,MAAvB,UACE,cAAC,KAAMsJ,OAAP,CAAc1D,MAAM,KAApB,qHACA,cAAC,KAAM0D,OAAP,CAAc1D,MAAM,KAApB,0GACA,cAAC,KAAM0D,OAAP,CAAc1D,MAAM,KAApB,oLAIA,cAAC,KAAM0D,OAAP,CAAc1D,MAAM,IAAI9G,MAAO,CAAEE,aAAc,QAA/C,gMAIA,cAAC,KAAMsK,OAAP,CAAc1D,MAAM,IAApB,sHAEA,cAAC,KAAM0D,OAAP,CAAc1D,MAAM,IAApB,yIAIN,cAAC,IAAD,CAAQpG,KAAK,UAAUO,SAAS,SAASC,UAAU,aAAnD,kFC7COsK,GAlBC,CACd,CACEP,MAAO,EACPQ,SACE,miBAEJ,CACER,MAAO,EACPQ,SACE,ydAEJ,CACER,MAAO,EACPQ,SACE,+WCAEC,GAASC,KAATD,KAER,SAASe,GAAE/M,GACT,IAAImM,EAASC,cAETvB,EAAOwB,SAASF,EAAOtB,MAEvBa,EAAOW,SAASF,EAAOT,MACvBY,EAASR,GAAUtG,KAAI,SAAC+G,GAC1B,OAAO,cAAC,GAAD,aAAcA,EAAEhB,WAGrBiB,EAAiBxM,EAAMmE,KAAK0G,EAAO,GAAG4B,WAAU,SAAAC,GAAC,MAAc,OAAVA,EAAE1H,QACvDyG,EAAYzL,EAAMmE,KAAK0G,EAAO,GAAG2B,EAAiB,GAKtD,OACE,qCACA,sBAAKhL,UAAU,OAAf,UACA,qBAAKd,IAAKyJ,KACR,eAAC,KAAD,CAAOwC,QAASjB,EAAhB,UACE,cAAC,GAAD,IACCY,QAKM,GAARZ,EACC,cAAC,GAAD,CAAOb,KAAMA,IAIb,cAAC,GAAD,CACEQ,mBAAoBS,GAAU9D,OAC9BoD,kBAAmBM,EACnBA,KAAMI,GAAUJ,EAAO,GACvBoB,OAAQ9M,EAAMgN,cACd1K,GAAIuI,EACJ3I,MAAOlC,EAAMkC,OAASqB,aAAa6G,QAAQ,SAC3CqB,UAAWA,EACXxG,WAAYjF,EAAMiF,gBAQ5B,IAKMgI,G,4JAIJ,WACE,OACE,cAACF,GAAD,eAAOvD,KAAKxJ,Y,GANA0J,IAAMC,WAWT5G,gBAhBS,SAACF,GACvB,MAAO,CAAEX,MAAOW,EAAMG,SAASd,MAAOiC,KAAMtB,EAAMgD,KAAK1B,QAejB,CAAC6I,czBqGZ,SAAC1K,EAAIJ,EAAOK,GAAZ,8CAAqB,WAAOY,GAAP,SAAAC,EAAA,+EAEzBnB,EAAeK,EAAIJ,EAAOK,GAFD,cAG9CY,EA1EK,CACLnC,KAAM,UACNuE,KAwEgBhD,IAH8B,gDAK9CqB,QAAQC,IAAR,MAL8C,yDAArB,uDyBrG2BU,WAAUU,cAAnDlC,CAAgEkK,I,UCpDhErC,GAxBD,SAAC5K,GACb,OACE,gCACE,qBAAKwB,UAAU,SAAf,kDAAkCxB,EAAM6K,QACxC,qBAAKrJ,UAAU,SAAf,ycAKA,qBAAKA,UAAU,YAAf,4GACA,qBAAKA,UAAU,SAAf,6ZAIA,qBAAKA,UAAU,SAAf,skBAGA,cAAC,IAAD,CAAQR,KAAK,UAASkM,QAAS,kBAAMlN,EAAMmN,UAAS,IAApD,SACE,cAAC,IAAD,CAAMrJ,GAAE,WAAM9D,EAAM6K,KAAZ,aAAR,kFCtBO,OAA0B,qCCA1B,OAA0B,sCCoI1BE,GA7HF,SAAC/K,GACZ,IAAIgL,EAAWC,cAEXtG,EAAWuG,KAAKC,MACjBnL,EAAMoL,kBAAoBpL,EAAMqL,mBAAsB,KAGzD,EAA0B+B,mBAAS,MAAnC,oBAAKC,EAAL,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,oBAAKG,EAAL,KAAWC,EAAX,KAEMtN,EAAW,WACfF,EAAMyN,QAAQzN,EAAMsC,GAAItC,EAAMkC,MAAO,CAAEwL,OAAQH,EAAKvF,QAAU,IAE1DhI,EAAMoL,oBAAsBpL,EAAMqL,mBACpCL,EAAS,IAAD,OAAKhL,EAAMsC,GAAX,mBAAwBtC,EAAMoL,kBAAoB,IAE1DpL,EAAMoL,oBAAsBpL,EAAMqL,oBAClCrL,EAAMyL,UAENT,EAAS,IAAD,OAAKhL,EAAMsC,GAAX,YAAiBtC,EAAMyL,UAAUzG,KAAjC,QAERhF,EAAMiF,WAAWjF,EAAMsC,GAAI,IAAK,IAAI2G,KAAQ,aAC5C+B,EAAS,WAIRhL,EAAM2N,UACTzN,IAGF0N,OAAOP,OAASA,EAChBO,OAAOL,KAAOA,EAEd,IAAIM,EAAa,SAAC/I,GAChB,IAAKuI,EACH,OAAOC,EAAU,CACfxI,EAAEgJ,cAAcC,QAAQC,KACxBlJ,EAAEgJ,cAAcC,QAAQE,UAEjBnJ,EAAEgJ,cAAcC,QAAQC,MAAQX,EAAO,KAChDG,EAAQ,GAAD,mBAAKD,GAAL,CAAWF,EAAO,MACzBC,EAAU,OAEZ1J,QAAQC,IAAIiB,EAAEgJ,cAAcC,QAAQC,MACpCpK,QAAQC,IAAIwJ,GACZzJ,QAAQC,IAAI0J,IAGVW,EAAc,SAACF,EAAMC,GACvB,QAAIZ,GAAUA,EAAO,IAAMY,MAEhBV,IAAQA,EAAKY,SAASH,KAOnC,OACE,qCACE,qBAAKxM,UAAU,YAAf,2RAIA,cAAC,KAAD,CACElB,MAAO,CACLC,MAAO,QACPkH,WAAY,OACZc,YAAa,OACb+C,QAAS,QACT9K,aAAc,QAEhB8I,QAAS3E,IAGX,sBAAKnD,UAAU,gBAAf,UACE,sBAAKA,UAAWxB,EAAM2N,SAAW,QAAU,mBAA3C,UACE,qBACEjN,IAAK0N,GACL,YAAU,MACV,eAAa,IACblB,QAASW,EACTrM,UACE0M,EAAY,MAAO,KAAO,cAAgB,oBAG9C,qBACExN,IAAK2N,GACL,YAAU,MACV,eAAa,IACbnB,QAASW,EACTrM,UACE0M,EAAY,MAAO,KAAO,cAAgB,uBAIhD,sBAAK1M,UAAU,QAAf,UACE,qBACEd,IAAK0N,GACL,YAAU,MACV,eAAa,IACblB,QAASW,EACTrM,UACE0M,EAAY,MAAO,KAAO,cAAgB,oBAG9C,qBACExN,IAAK2N,GACL,YAAU,MACV,eAAa,IACbnB,QAASW,EACTrM,UACE0M,EAAY,MAAO,KAAO,cAAgB,0BAMlD,cAAC,IAAD,CAAQlN,KAAK,UAAUkM,QAAShN,EAAUI,MAAO,CAAEgI,UAAW,QAA9D,8ECvHSwD,GANC,CACd,CACEP,MAAO,ICYHS,GAASC,KAATD,KAmEOjJ,gBAJS,SAACF,GACvB,MAAO,CAAEX,MAAOW,EAAMG,SAASd,MAAOiC,KAAMtB,EAAMgD,KAAK1B,QAGjB,CAAEmK,e/B6GZ,SAAChM,EAAIJ,EAAOK,GAAZ,8CAAqB,WAAOY,GAAP,SAAAC,EAAA,+EAE1BnB,EAAgBK,EAAIJ,EAAOK,GAFD,cAG/CY,EA5EK,CACLnC,KAAM,WACNuE,KA0EiBhD,IAH8B,gDAK/CqB,QAAQC,IAAR,MAL+C,yDAArB,uD+B7G4BoB,cAA3ClC,EAjEF,SAAC/C,GACZ,MAAwBoN,oBAAS,GAAjC,oBAAKmB,EAAL,KAAYpB,EAAZ,KACIhB,EAASC,cAETvB,EAAOwB,SAASF,EAAOtB,MAEvBa,EAAOW,SAASF,EAAOT,MACvBY,EAASR,GAAUtG,KAAI,SAAC+G,GAC1B,OAAO,cAAC,GAAD,aAAcA,EAAEhB,WAGrBiB,EAAiBxM,EAAMmE,KAAK0G,EAAO,GAAG4B,WACxC,SAACC,GAAD,MAAiB,UAAVA,EAAE1H,QAEPyG,EAAYzL,EAAMmE,KAAK0G,EAAO,GAAG2B,EAAiB,GAEtD,OACE,qCACE,sBAAKhL,UAAU,OAAf,UACE,qBAAKd,IAAKyJ,KACV,eAAC,KAAD,CAAOwC,QAASjB,EAAhB,UACE,cAAC,GAAD,IACCY,KAGH,cAAC,wBAAD,CACEkC,UAAWD,EACXE,WAAY,WACVtB,GAAS,IAEXuB,SAAU,IACVC,OAAQ,CACN,CAAC,UAAW,KACZ,CAAC,UAAW,KACZ,CAAC,UAAW,MAThB,SAYG,gBAAGC,EAAH,EAAGA,cAAH,OAAuB,qBAAKpN,UAAU,OAAf,SAAuBoN,UAK1C,GAARlD,EACC,cAAC,GAAD,CAAOb,KAAMA,EAAMsC,SAAUA,IAE7B,cAAC,GAAD,CACE9B,mBAAoBS,GAAU9D,OAC9BoD,kBAAmBM,EACnBA,KAAMI,GAAUJ,EAAO,GACvB+B,QAASzN,EAAMsO,eACfhM,GAAIuI,EACJ3I,MAAOlC,EAAMkC,OAASqB,aAAa6G,QAAQ,SAC3CqB,UAAWA,EACXxG,WAAYjF,EAAMiF,WAClB0I,SAAUY,UCzDdM,G,4JACJ,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAU/I,MAAOA,GAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgJ,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,GAAD,iB,GAXpCrF,IAAMC,WAmBxBiE,OAAO9H,MAAQA,GAEA+I,UCtBAG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS3G,OAAO,cAAC,GAAD,IAAS4G,SAASC,eAAe,SAKjDX,M","file":"static/js/main.4c41cff7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Lock.06748369.svg\";","export default __webpack_public_path__ + \"static/media/Email.76488dfd.svg\";","import { Button, Input, Form } from \"antd\";\r\nimport lock from \"./Lock.svg\";\r\nimport email from \"./Email.svg\";\r\n\r\nconst AuthForm = (props) => {\r\n  const onFinish = (values) => {\r\n    props.handleSubmit(values);\r\n  };\r\n\r\n  return (\r\n    <Form name=\"basic\" onFinish={onFinish}>\r\n      <Form.Item\r\n      style={{width: '100%', marginBottom: '16px'}}\r\n        label={<img src={email} />}\r\n        name=\"email\"\r\n        validateStatus={props.errors.email ? \"error\" : \"validating\"}\r\n        help={props.errors.email ? props.errors.email : \"\"}\r\n        rules={[\r\n          {\r\n            type: \"email\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder='example@mail.com' style={{paddingTop: '17px', paddingBottom: '17px'}}/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n      style={{width: '100%', marginBottom: '48px'}}\r\n        label={<img src={lock} />}\r\n        name=\"password\"\r\n        validateStatus={props.errors.password ? \"error\" : \"validating\"}\r\n        help={props.errors.password ? props.errors.password : \"\"}\r\n      >\r\n        <Input.Password placeholder='••••••••' style={{paddingTop: '17px', paddingBottom: '17px'}}/>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type='primary' htmlType=\"submit\" className='btn-cus'>\r\n          Войти\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","const Axios = require(\"axios\");\r\n\r\nconst instance = Axios.create({\r\n  baseURL: \"https://api.jamskills.ml/api/\",\r\n});\r\n\r\nexport const authApi = {\r\n  login(email, password) {\r\n    return instance.post(\"/testingusers/login\", { email, password });\r\n  },\r\n};\r\n\r\nexport const regApi = {\r\n  reg(data) {\r\n    return instance.post(\"/testingusers/registration\", { ...data });\r\n  },\r\n};\r\n\r\nexport const testApi = {\r\n  getTests(token) {\r\n    return instance.get(\"/testingusers/setquizzes\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n  getTest(id, token) {\r\n    return instance.get(`/testingusers/setquizzes/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  setHol(id, token, body) {\r\n    return instance.post(`/testingusers/setquizzes/${id}/hol/answers`, body, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  setUsk(id, token, body) {\r\n    return instance.post(`/testingusers/setquizzes/${id}/usk/answers`, body, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  setGatb(id, token, body) {\r\n    return instance.post(\r\n      `/testingusers/setquizzes/${id}/gatb_5/answers`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n  },\r\n};\r\n","import { authApi } from \"../common/api\";\r\n\r\nlet initialState = {\r\n  isAuth: false,\r\n  email: null,\r\n  errors: [],\r\n  token: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"auth\":\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        isAuth: action.isAuth,\r\n      };\r\n    case \"errors\":\r\n      return {\r\n        ...state,\r\n        errors: action.errors,\r\n        isAuth: action.isAuth\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setAuth = (email, token, status) => {\r\n  return {\r\n    type: \"auth\",\r\n    data: { email, token },\r\n    isAuth: status,\r\n  };\r\n};\r\n\r\nconst setErrors = (errors, status) => {\r\n  return {\r\n    type: \"errors\",\r\n    errors: errors,\r\n    isAuth: status\r\n  };\r\n};\r\n\r\nexport const Login = (form) => async (dispatch) => {\r\n  try {\r\n    let responce = await authApi.login(form.email, form.password);\r\n    dispatch(setAuth(form.email, responce.data.token));\r\n    localStorage.setItem('token', responce.data.token)\r\n    localStorage.setItem('email', form.email)\r\n    dispatch(setErrors([], true));\r\n  } catch (error) {\r\n    const { response } = error;\r\n    const { request, ...errorObject } = response;\r\n    if (errorObject.status !== 200) {\r\n      dispatch(setErrors(errorObject.data, false));\r\n    }\r\n    console.log(error)\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export default __webpack_public_path__ + \"static/media/Rectangle 1.c37c6afe.svg\";","import { connect } from \"react-redux\";\r\nimport \"./auth.css\";\r\nimport AuthForm from \"./Form\";\r\nimport { Login } from \"../../redux/auth-reducer\";\r\nimport img from \"./Rectangle 1.svg\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\n\r\n\r\nconst AuthPage = (props) => {\r\n\r\n  if (props.isAuth) {\r\n    return <Navigate to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"sider\">\r\n        <div className='sider-content'>\r\n          <img src={img} />\r\n          <div className=\"first\">Добро Пожаловать!</div>\r\n          <div className=\"second\">\r\n            Jamskills - это сервис для автоматизации оценки сотрудников и\r\n            кандидатов!{\" \"}\r\n          </div>\r\n          <div className=\"third\">\r\n            Если Вы еще не зарегистрированны, создайте свой кабинет\r\n          </div>\r\n          <button className='btn'>\r\n            <Link to=\"/\">Создать</Link>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main\">\r\n        <div className=\"form\">\r\n          <div className=\"text\">Авторизация</div>\r\n          <AuthForm handleSubmit={props.Login} errors={props.errors} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isAuth: state.authPage.isAuth, errors: state.authPage.errors };\r\n};\r\n\r\nexport default connect(mapStateToProps, { Login })(AuthPage);\r\n","import { regApi } from \"../common/api\";\r\n\r\n\r\nlet initialState = {\r\n  isReg: false,\r\n  errors: [],\r\n};\r\n\r\nconst regReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"reg\":\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        isReg: action.isReg,\r\n      };\r\n    case \"errors\":\r\n      return {\r\n        ...state,\r\n        errors: action.errors,\r\n        isReg: action.isReg,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setReg = (data) => {\r\n  return {\r\n    type: \"reg\",\r\n    data: data,\r\n    isReg: true,\r\n  };\r\n};\r\n\r\nconst setErrors = (errors, status) => {\r\n  return {\r\n    type: \"errors\",\r\n    errors: errors,\r\n    isReg: status,\r\n  };\r\n};\r\n\r\nexport const Reg = (form) => async (dispatch) => {\r\n  try {\r\n    \r\n    let responce = await regApi.reg(form);\r\n    dispatch(setReg(form));\r\n    dispatch(setErrors([], true));\r\n  } catch (error) {\r\n    const { response } = error;\r\n    const { request, ...errorObject } = response;\r\n    if (errorObject.status !== 201) {\r\n      dispatch(setErrors(errorObject.data, false));\r\n    }\r\n  }\r\n};\r\n\r\nexport default regReducer;\r\n","import { testApi } from \"../common/api\";\r\n\r\nlet initialState = {\r\n  tests: [],\r\n  errors: null,\r\n  sets: [],\r\n  hol_answ: [],\r\n  usk_answ: [],\r\n  gatb_answ: []\r\n};\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"get-tests\":\r\n      return {\r\n        ...state,\r\n        tests: action.data,\r\n      };\r\n    case \"set-sets\":\r\n      return {\r\n        ...state,\r\n        sets: [...state.sets, action.data],\r\n      };\r\n    case \"set-hol\":\r\n      return {\r\n        ...state,\r\n        hol_answ: [...state.hol_answ, action.answ],\r\n      };\r\n    case \"set-usk\":\r\n      return {\r\n        ...state,\r\n        usk_answ: [...state.usk_answ, action.answ],\r\n      };\r\n      case \"set-gatb\":\r\n        return {\r\n          ...state,\r\n          gatb_answ: [...state.gatb_answ, action.answ],\r\n        };\r\n    case \"errors\":\r\n      return {\r\n        ...state,\r\n        errors: action.errors,\r\n      };\r\n    case \"set-progress\":\r\n      return {\r\n        ...state,\r\n        tests: state.tests.map((t) => {\r\n          if (t.id === action.id) {\r\n            console.log(t.id)\r\n            return { ...t, progress: action.progress };\r\n          }\r\n          return t;\r\n        }),\r\n      };\r\n    case \"set-time\":\r\n      return {\r\n        ...state,\r\n        tests: state.tests.map((t) => {\r\n          if (t.id === action.id) {\r\n            return { ...t, ended_at: action.time };\r\n          }\r\n          return t;\r\n        }),\r\n      };\r\n\r\n      case \"set-status\":\r\n      return {\r\n        ...state,\r\n        tests: state.tests.map((t) => {\r\n          if (t.id === action.id) {\r\n            return { ...t, status: action.status };\r\n          }\r\n          return t;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setTests = (data) => {\r\n  return {\r\n    type: \"get-tests\",\r\n    data: data,\r\n  };\r\n};\r\n\r\nconst setErrors = (errors) => {\r\n  return {\r\n    type: \"errors\",\r\n    errors: errors,\r\n  };\r\n};\r\n\r\nconst setSets = (data) => {\r\n  return {\r\n    type: \"set-sets\",\r\n    data: data,\r\n  };\r\n};\r\n\r\nconst setHol = (answ) => {\r\n  return {\r\n    type: \"set-hol\",\r\n    answ: answ,\r\n  };\r\n};\r\n\r\nconst setUsk = (answ) => {\r\n  return {\r\n    type: \"set-usk\",\r\n    answ: answ,\r\n  };\r\n};\r\n\r\nconst setGatb = (answ) => {\r\n  return {\r\n    type: \"set-gatb\",\r\n    answ: answ,\r\n  };\r\n};\r\n\r\nconst setProgress = (id, progress) => {\r\n  return {\r\n    type: \"set-progress\",\r\n    id: id,\r\n    progress: progress,\r\n  };\r\n};\r\n\r\nconst setTime = (id, time) => {\r\n  return {\r\n    type: \"set-time\",\r\n    id: id,\r\n    time: time,\r\n  };\r\n};\r\n\r\nconst setStatus = (id, status) => {\r\n  return {\r\n    type: \"set-status\",\r\n    id: id,\r\n    status: status,\r\n  };\r\n};\r\n\r\nexport const getTests = (token) => async (dispatch) => {\r\n  try {\r\n    let responce = await testApi.getTests(token);\r\n    responce.data.forEach(async (i) => {\r\n      i.set = [];\r\n      i.progress = 0;\r\n      i.ended_at = null;\r\n      let newRes = await testApi.getTest(i.id, token);\r\n      for (let e of newRes.data) {\r\n        i.set.push(e.quiz);\r\n      }\r\n      dispatch(setSets(newRes.data));\r\n    });\r\n    dispatch(setTests(responce.data));\r\n    dispatch(setErrors([]));\r\n  } catch (error) {\r\n    console.log(error);\r\n    const { response } = error;\r\n    const { request, ...errorObject } = response;\r\n    if (errorObject.status !== 200) {\r\n      dispatch(setErrors(errorObject.data));\r\n    }\r\n  }\r\n};\r\n\r\nexport const setHolAnswers = (id, token, body) => async (dispatch) => {\r\n  try {\r\n    let responce = await testApi.setHol(id, token, body);\r\n    dispatch(setHol(body));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const setUskAnswers = (id, token, body) => async (dispatch) => {\r\n  try {\r\n    let responce = await testApi.setUsk(id, token, body);\r\n    dispatch(setUsk(body));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const setGatbAnswers = (id, token, body) => async (dispatch) => {\r\n  try {\r\n    let responce = await testApi.setGatb(id, token, body);\r\n    dispatch(setGatb(body));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const setSetDone = (id, progress, time, status) => (dispatch) => {\r\n  console.log(id, progress, time)\r\n  dispatch(setProgress(id, progress));\r\n  dispatch(setTime(id, time));\r\n  dispatch(setStatus(id, status))\r\n};\r\n\r\nexport default testReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport regReducer from \"./reg-reducer\";\r\nimport testReducer from \"./test-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  authPage: authReducer,\r\n  regPage: regReducer,\r\n  home: testReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/Man.6c83c164.svg\";","import { Button, Input, Form, Checkbox } from \"antd\";\r\n\r\nimport email from \"../auth/Email.svg\";\r\nimport lock from \"../auth/Lock.svg\";\r\nimport man from \"./Man.svg\";\r\n\r\nconst RegForm = (props) => {\r\n  const Finish = (values) => {\r\n    let data = Object.fromEntries(\r\n      Object.entries(values).filter(\r\n        ([key]) => key !== \"agreement\" && key !== \"confirm\"\r\n      )\r\n    );\r\n\r\n    props.handleSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <Form name=\"basic\" onFinish={Finish}>\r\n      <Form.Item\r\n        label={<img src={man} />}\r\n        style={{ height: \"auto\", marginBottom: \"32px\", width: '100%' }}\r\n      >\r\n        <Input.Group>\r\n          <Form.Item\r\n            name=\"last_name\"\r\n            noStyle\r\n            style={{width: '100%'}}\r\n            rules={[{ required: true, message: \"Last name is required\" }]}\r\n          >\r\n            <Input\r\n              style={{ width: \"100%\", height: \"56px\", marginBottom: \"8px\" }}\r\n              placeholder=\"Фамилия\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"first_name\"\r\n            noStyle\r\n            rules={[{ required: true, message: \"First name is required\" }]}\r\n          >\r\n            <Input style={{ width: \"38%\", height: \"56px\" }} placeholder=\"Имя\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"patronymic\"\r\n            noStyle\r\n            rules={[{ required: true, message: \"Patronymic is required\" }]}\r\n          >\r\n            <Input\r\n              style={{ width: \"60%\", height: \"56px\", float: \"right\" }}\r\n              placeholder=\"Отчество\"\r\n            />\r\n          </Form.Item>\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        style={{ marginBottom: \"32px\", height: \"auto\", width: '100%'}}\r\n        label={<img src={email} />}\r\n        name=\"email\"\r\n        validateStatus={props.errors.email ? \"error\" : \"validating\"}\r\n        help={props.errors.email ? props.errors.email : \"\"}\r\n        rules={[\r\n          {\r\n            type: \"email\",\r\n            required: true,\r\n            message: \"Email is required\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder=\"example@mail.com\" style={{ height: \"56px\" }} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label={<img src={lock} />}\r\n        style={{ height: \"auto\", marginBottom: \"8px\" , width: '100%'}}\r\n      >\r\n        <Input.Group style={{ height: \"auto\" }}>\r\n          <Form.Item\r\n            hasFeedback\r\n            style={{ height: \"auto\", marginBottom: \"8px\" , width: '100%'}}\r\n            name=\"password\"\r\n            validateStatus={props.errors.password ? \"error\" : \"validating\"}\r\n            help={props.errors.password ? props.errors.password : \"\"}\r\n          >\r\n            <Input.Password style={{ height: \"56px\" }} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            hasFeedback\r\n            style={{ height: \"auto\", marginBottom: \"0px\", width: '100%' }}\r\n            dependencies={[\"password\"]}\r\n            name=\"confirm\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\",\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    \"The two passwords that you entered do not match!\"\r\n                  );\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password style={{ height: \"56px\" }} />\r\n          </Form.Item>\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        style={{ marginLeft: \"62px\", width: '100%' }}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            validator: (_, value) =>\r\n              value\r\n                ? Promise.resolve()\r\n                : Promise.reject(new Error(\"Should accept agreement\")),\r\n          },\r\n        ]}\r\n      >\r\n        <Checkbox>\r\n          Принимаю{\" \"}\r\n          <a href=\"\">\r\n            Пользовательское соглашение и Политику конфиденциальности\r\n          </a>\r\n        </Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"btn-cus\">\r\n          Создать\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RegForm;\r\n","import { connect } from \"react-redux\";\r\nimport { Link, Navigate} from \"react-router-dom\";\r\nimport \"../auth/auth.css\";\r\nimport img from \"../auth/Rectangle 1.svg\";\r\nimport RegForm from \"./RegForm\";\r\nimport { Reg } from \"../../redux/reg-reducer\";\r\nimport React from \"react\";\r\n\r\nconst RegPage = (props) => {\r\n  if (props.isReg) {\r\n    return <Navigate to=\"/auth\" />;\r\n  }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"sider\">\r\n        <div className=\"sider-content\">\r\n          <img src={img} />\r\n          <div className=\"first\">Добро Пожаловать!</div>\r\n          <div className=\"second\">\r\n            Jamskills - это сервис для автоматизации оценки сотрудников и\r\n            кандидатов!{\" \"}\r\n          </div>\r\n          <div className=\"third\">\r\n            Если Вы уже зарегистрированны, войдите в свой кабинет\r\n          </div>\r\n          <button className=\"btn\">\r\n            <Link to=\"/auth\">Войти</Link>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main\">\r\n        <div className=\"form\">\r\n          <div className=\"text\">Регистрация</div>\r\n          <RegForm handleSubmit={props.Reg} errors={props.errors} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isReg: state.regPage.isReg, errors: state.regPage.errors };\r\n};\r\n\r\nexport default connect(mapStateToProps, { Reg})(RegPage);\r\n","export default __webpack_public_path__ + \"static/media/Rectangle 1.fd9ea175.svg\";","export default __webpack_public_path__ + \"static/media/default.12a2e8d8.svg\";","export default __webpack_public_path__ + \"static/media/Vector (4).ec5367f0.svg\";","export default __webpack_public_path__ + \"static/media/home.132fda10.svg\";","export default __webpack_public_path__ + \"static/media/img1.d5ea3c7d.svg\";","export default __webpack_public_path__ + \"static/media/img2.3d1e94da.svg\";","export default __webpack_public_path__ + \"static/media/like.83358d66.svg\";","export default __webpack_public_path__ + \"static/media/clock.60e01770.svg\";","export default __webpack_public_path__ + \"static/media/fire.857cb770.svg\";","import \"./Home.css\";\r\nimport like from \"./like.svg\";\r\nimport clock from \"./clock.svg\";\r\nimport fire from \"./fire.svg\";\r\n\r\nconst Status = (props) => {\r\n  const all = props.tests.length;\r\n  const completed = props.tests.filter((t) => t.status == \"completed\").length;\r\n  const in_progress = props.tests.filter(\r\n    (t) => t.status == \"in_progress\"\r\n  ).length;\r\n  const expired = props.tests.filter((t) => t.status == \"expired\").length;\r\n  return (\r\n    <ul className=\"status\">\r\n      <li>\r\n        Всего приглашений\r\n        <div className=\"num\">{all}</div>\r\n      </li>\r\n\r\n      <li>\r\n        Пройдено\r\n        <div className=\"num\">\r\n          <img\r\n            src={like}\r\n            style={{\r\n              verticalAlign: \"top\",\r\n              marginTop: \"3px\",\r\n              marginRight: \"6px\",\r\n            }}\r\n          />\r\n          {completed}\r\n        </div>\r\n      </li>\r\n\r\n      <li>\r\n        В процессе\r\n        <div className=\"num\">\r\n          <img\r\n            src={clock}\r\n            style={{\r\n              verticalAlign: \"top\",\r\n              marginTop: \"6px\",\r\n              marginRight: \"6px\",\r\n            }}\r\n          />\r\n          {in_progress}\r\n        </div>\r\n      </li>\r\n\r\n      <li>\r\n        Отказано\r\n        <div className=\"num\">\r\n          <img\r\n            src={fire}\r\n            style={{\r\n              verticalAlign: \"top\",\r\n              marginTop: \"3px\",\r\n              marginRight: \"6px\",\r\n            }}\r\n          />\r\n          {expired}\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import { Table, Switch, Radio, Form, Space, Progress } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nclass Tests extends React.Component {\r\n  \r\n \r\n\r\n  handleStatus(status) {\r\n    switch (status) {\r\n      case \"created\":\r\n        return <li className=\"s created\">Не начато</li>;\r\n      case \"in_progress\":\r\n        return <li className=\"s progress\">В процессе</li>;\r\n      case \"completed\":\r\n        return <li className=\"s completed\">Выполнено</li>;\r\n      default:\r\n        return <li className=\"s rejected\">Отказано</li>;\r\n    }\r\n  }\r\n\r\n\r\n  columns = [\r\n    {\r\n      title: \"Тест\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Подтесты\",\r\n      dataIndex: \"set\",\r\n      key: \"set\",render: (text, record) => (\r\n        <Space>{record.set}</Space>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Отправитель\",\r\n      dataIndex: \"hr\",\r\n      key: \"hr\",\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Приглашение\",\r\n      dataIndex: \"invited_at\",\r\n      key: \"invited_at\",\r\n      render: (text) => (\r\n        <Space>{new Date(Date.parse(text)).toISOString().slice(0, 10)}</Space>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Завершение\",\r\n      dataIndex: \"ended_at\",\r\n      key: \"ended_at\",\r\n      render: (text) => (\r\n        <Space>{text == null ? \"00.00.00\" : text.toISOString().slice(0, 10)}</Space>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Состояние\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (text) => this.handleStatus(text),\r\n    },\r\n    {\r\n      title: \"Прогресс\",\r\n      dataIndex: \"progress\",\r\n      key: \"progress\",render: (text) => (\r\n        <Progress percent={text || 0}/>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Действия\",\r\n      render: (text, record) => (\r\n        <Space>\r\n          <Link\r\n            to={\r\n              this.props.sets[record.id - 1]\r\n                ? `/${record.id}/${this.props.sets[record.id - 1][0].quiz}/0`\r\n                : \"\"\r\n            }\r\n            className={record.status == \"expired\" || record.status == \"completed\" ? \"disabled-link\" : \"\"}\r\n          >\r\n            Перейти\r\n          </Link>\r\n          <a>Отказ</a>\r\n          <Link\r\n            to=\"/\"\r\n            className={record.status == \"completed\" ? \"\" : \"disabled-link\"}\r\n          >\r\n            Результат\r\n          </Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        rowKey={(record) => record.id}\r\n        columns={this.columns}\r\n        dataSource={this.props.tests}\r\n        className=\"table\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.home.tests,\r\n    sets: state.home.sets,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Tests);\r\n","import { Layout } from \"antd\";\r\nimport logo from \"./Rectangle 1.svg\";\r\nimport avatar from \"./default.svg\";\r\nimport vector from \"./Vector (4).svg\";\r\nimport home from \"./home.svg\";\r\nimport img1 from \"./img1.svg\";\r\nimport img2 from \"./img2.svg\";\r\nimport \"./Home.css\";\r\nimport Status from \"./Status\";\r\nimport Tests from \"./Tests\";\r\n\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst Wrapper = (props) => {\r\n  return (\r\n    <Layout>\r\n      <Header\r\n        style={{\r\n          background: \"#FAFAFA\",\r\n          boxShadow: \"0px 4px 16px rgba(0, 0, 0, 0.08)\",\r\n        }}\r\n        className=\"header\"\r\n      >\r\n        <div className=\"logo\">\r\n          <img src={logo} style={{ marginRight: \"16px\" }} />\r\n          <div>Jamskills</div>\r\n        </div>\r\n\r\n        <div className=\"avatar\">\r\n          <div>{props.email || localStorage.getItem(\"email\")}</div>\r\n          <img src={avatar} style={{ marginLeft: \"8px\" }} />\r\n        </div>\r\n      </Header>\r\n      <Layout>\r\n        <Sider\r\n          width={304}\r\n          style={{\r\n            minHeight: \"100vh\",\r\n            background: \"#FAFAFA\",\r\n            boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.15\",\r\n          }}\r\n          className=\"sider\"\r\n        >\r\n          <div className=\"sider_f\">\r\n            <img src={home} style={{ marginRight: \"16px\" }} />\r\n            <div>Домашняя страница</div>\r\n          </div>\r\n\r\n          <div className=\"sider_s\">\r\n            <div className=\"set\">Настройки</div>\r\n            <div>\r\n              <img\r\n                src={img1}\r\n                style={{ marginRight: \"16px\", marginBottom: \"16px\" }}\r\n              />\r\n              <span>Профиль</span>\r\n            </div>\r\n\r\n            <div>\r\n              <img src={img2} style={{ marginRight: \"16px\" }} />\r\n              <span>Выход</span>\r\n            </div>\r\n          </div>\r\n        </Sider>\r\n        <Content>\r\n          <div className=\"header_s\">\r\n            <div>Домашняя страница</div>\r\n            <div>Домашняя страница</div>\r\n            <img src={vector} />\r\n          </div>\r\n\r\n          <Content style={{padding: '47px 65px'}}>\r\n            <Status tests={props.tests} />\r\n            <Tests/>\r\n            \r\n          </Content>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTests } from \"../../redux/test-reducer\";\r\nimport Wrapper from \"./Layout\";\r\n\r\nclass Home extends React.Component {\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n    if (this.props.tests.length == 0) {\r\n      console.log('empty')\r\n      this.props.getTests(this.props.token || localStorage.getItem(\"token\"));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Wrapper email={this.props.email} tests={this.props.tests} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.authPage.token,\r\n    errors: state.home.errors,\r\n    email: state.authPage.email,\r\n    tests: state.home.tests,\r\n    sets: state.home.sets,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTests })(Home);\r\n","import { Button, Form, Radio } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Hol.css\";\r\n\r\nconst Intro = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"test_1\">{`Тест №${props.test}`}</div>\r\n      <div className=\"test_2\">\r\n        Вам попарно будут представлены различные профессии, например:\r\n      </div>\r\n\r\n      <div>\r\n        <Form.Item >\r\n          <Radio.Group>\r\n            <Radio.Button >ЗООТЕХНИК</Radio.Button>\r\n            <Radio.Button >ГЛАВНЫЙ ВРАЧ</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </div>\r\n      <div className=\"test_3\">\r\n        В каждой паре Вам следует отдать предпочтение какой-то одной.\r\n      </div>\r\n\r\n      <div className=\"test_4\">\r\n        Выбрать вариант можно при помощи мыши. Подтвердить выбор можно через\r\n        двойной щелчок или кнопки “Продолжить”.\r\n      </div>\r\n      <Button type=\"primary\">\r\n        <Link to={`/${props.test}/hol/1`}>Все понятно!</Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import { Form, Button, Radio, Progress } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../hol/Hol.css\";\r\n\r\nconst Ques = (props) => {\r\n  let navigate = useNavigate();\r\n\r\n  let progress = Math.round(\r\n    (props.numer_of_question / props.numer_of_questions) * 100\r\n  );\r\n  const onFinish = (value) => {\r\n    value.index = props.numer_of_question;\r\n    props.setHol(props.id, props.token, [value]);\r\n\r\n\r\n    if (props.numer_of_question !== props.numer_of_questions) {\r\n      navigate(`/${props.id}/hol/${props.numer_of_question + 1}`);\r\n    } else if (props.numer_of_question === props.numer_of_questions && props.next_test) {\r\n      navigate(`/${props.id}/${props.next_test.quiz}/0`);\r\n    } else  {\r\n      props.setSetDone(props.id, 100, new Date(), 'completed')\r\n      navigate('/home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ques_name\">Выберите одну из предложенных профессий</div>\r\n\r\n      <Progress\r\n        style={{\r\n          width: \"630px\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          display: \"block\",\r\n          marginBottom: \"65px\",\r\n        }}\r\n        percent={progress}\r\n      />\r\n\r\n      <Form onFinish={onFinish}>\r\n        <Form.Item name=\"name\" rules={[{ required: true, message: 'Пожалуйста выберите значение' }]}>\r\n          <Radio.Group>\r\n            <Radio.Button value={props.ques.answers.left.name}>\r\n              {props.ques.answers.left.text}\r\n            </Radio.Button>\r\n            <Radio.Button value={props.ques.answers.right.name}>\r\n              {props.ques.answers.right.text}\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Продолжить\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ques;\r\n","let questions = [\r\n  {\r\n    index: 1,\r\n    question: \"Какую профессию вы бы предпочли?\",\r\n    answers: {\r\n      left: {\r\n        name: \"R\",\r\n        text: \"Автомеханик\",\r\n      },\r\n      right: {\r\n        name: \"I\",\r\n        text: \"Биофизик\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    index: 2,\r\n    question: \"Какую профессию вы бы предпочли?\",\r\n    answers: {\r\n      left: {\r\n        name: \"R\",\r\n        text: \"Егерь\",\r\n      },\r\n      right: {\r\n        name: \"S\",\r\n        text: \"Интервьюер\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    index: 3,\r\n    question: \"Какую профессию вы бы предпочли?\",\r\n    answers: {\r\n      left: {\r\n        name: \"R\",\r\n        text: \"Кондитер\",\r\n      },\r\n      right: {\r\n        name: \"C\",\r\n        text: \"Делопроизводитель\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nexport default questions;\r\n","import { Steps } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setHolAnswers, getTests, setSetDone } from \"../../../redux/test-reducer\";\r\nimport logo from \"../../home/Rectangle 1.svg\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Intro from \"./Intro\";\r\nimport Ques from \"./Ques\";\r\nimport questions from \"./questions\";\r\nimport \"./Hol.css\";\r\n\r\nconst { Step } = Steps;\r\n\r\nfunction Holland(props) {\r\n\r\n  \r\n  let params = useParams();\r\n\r\n  let test = parseInt(params.test);\r\n\r\n  let ques = parseInt(params.ques);\r\n  let StepEl = questions.map((q) => {\r\n    return <Step key={`${q.index}`} />;\r\n  });\r\n\r\n  let current_number = props.sets.length != 0 ?  props.sets[test - 1].findIndex((s) => s.quiz == \"hol\") : 0;\r\n  let next_test = props.sets.length != 0 ? props.sets[test - 1][current_number + 1] : 1;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo\">\r\n        <img src={logo} />\r\n        <Steps current={ques}>\r\n          <Step />\r\n          {StepEl}\r\n        </Steps>\r\n      </div>\r\n      {ques == 0 ? (\r\n        <Intro test={test} />\r\n      ) : (\r\n        <Ques\r\n          numer_of_questions={questions.length}\r\n          numer_of_question={ques}\r\n          ques={questions[ques - 1]}\r\n          setHol={props.setHolAnswers}\r\n          id={test}\r\n          token={props.token || localStorage.getItem(\"token\")}\r\n          next_test={next_test}\r\n          setSetDone={props.setSetDone}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nclass Hol extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Holland {...this.props}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { token: state.authPage.token, sets: state.home.sets };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setHolAnswers, getTests, setSetDone })(Hol);\r\n","import { Button} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../hol/Hol.css\";\r\n\r\nconst Intro = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"test_1\">{`Тест №${props.test}`}</div>\r\n      <div className=\"test_2\">\r\n        Вам предстоит оценить ряд утверждений, касающихся различных сторон\r\n        жизни. Просим вас отвечать правдиво и быстро.\r\n      </div>\r\n\r\n      <div className=\"test_3\">\r\n        Помните, что нет ответов хороших и плохих, правильных и неправильных.\r\n        Просто мы все разные.\r\n      </div>\r\n\r\n      <div className=\"test_4\">\r\n        Выбрать вариант можно при помощи мыши. Подтвердить выбор можно через\r\n        двойной щелчок или кнопки “Продолжить”.\r\n      </div>\r\n      <Button type=\"primary\">\r\n        <Link to={`/${props.test}/usk/1`}>Все понятно!</Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import { Form, Button, Radio, Progress } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Usk.css\";\r\n\r\nconst Ques = (props) => {\r\n  let navigate = useNavigate();\r\n\r\n  let progress = Math.round(\r\n    (props.numer_of_question / props.numer_of_questions) * 100\r\n  );\r\n  const onFinish = (value) => {\r\n    value.index = props.numer_of_question;\r\n    props.setUsk(props.id, props.token, [value]);\r\n\r\n    if (props.numer_of_question !== props.numer_of_questions) {\r\n      navigate(`/${props.id}/usk/${props.numer_of_question + 1}`);\r\n    } else if (\r\n      props.numer_of_question === props.numer_of_questions &&\r\n      props.next_test\r\n    ) {\r\n      navigate(`/${props.id}/${props.next_test.quiz}/0`);\r\n    } else {\r\n      props.setSetDone(props.id, 100, new Date(), 'completed');\r\n      navigate(\"/home\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ques_name\">Выберите один из вариантов</div>\r\n\r\n      <Progress\r\n        style={{\r\n          width: \"630px\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          display: \"block\",\r\n          marginBottom: \"65px\",\r\n        }}\r\n        percent={progress}\r\n      />\r\n\r\n      <Form onFinish={onFinish}>\r\n        <div className=\"flex\">\r\n          <div className=\"ques\">{props.ques.question}</div>\r\n          <Form.Item name=\"code\" rules={[{ required: true, message: 'Пожалуйста выберите значение' }]}>\r\n            <Radio.Group className=\"usk\">\r\n              <Radio.Button value=\"-3\">Полностью согласен</Radio.Button>\r\n              <Radio.Button value=\"-2\">Пожалуй, согласен</Radio.Button>\r\n              <Radio.Button value=\"-1\">\r\n                Скорее согласен, чем несогласен\r\n              </Radio.Button>\r\n\r\n              <Radio.Button value=\"1\" style={{ marginBottom: \"32px\" }}>\r\n                Скорее несогласен, чем несогласен\r\n              </Radio.Button>\r\n\r\n              <Radio.Button value=\"2\">Пожалуй, несогласен</Radio.Button>\r\n\r\n              <Radio.Button value=\"3\">Полностью несогласен</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n        </div>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"usk_button\">\r\n          Продолжить\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ques;\r\n","let questions = [\r\n  {\r\n    index: 1,\r\n    question:\r\n      \"Продвижение по службе больше зависит от удачного обстоятельства, чем от способностей и усилий человека.\",\r\n  },\r\n  {\r\n    index: 2,\r\n    question:\r\n      \"Большинство разводов происходит оттого, что люди не захотели приспособиться друг к другу.\",\r\n  },\r\n  {\r\n    index: 3,\r\n    question:\r\n      \"Болезнь – дело случая; если уж суждено заболеть, то ничего не поделаешь.\",\r\n  },\r\n];\r\n\r\nexport default questions;\r\n","import { Steps } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUskAnswers , getTests, setSetDone} from \"../../../redux/test-reducer\";\r\n\r\n\r\nimport logo from \"../../home/Rectangle 1.svg\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Intro from \"./Intro\";\r\nimport Ques from \"./Ques\";\r\nimport questions from \"./questions\";\r\nimport '../hol/Hol.css';\r\n\r\nconst { Step } = Steps;\r\n\r\nfunction U(props) {\r\n  let params = useParams();\r\n\r\n  let test = parseInt(params.test);\r\n\r\n  let ques = parseInt(params.ques);\r\n  let StepEl = questions.map((q) => {\r\n    return <Step key={`${q.index}`} />;\r\n  });\r\n\r\n  let current_number = props.sets[test - 1].findIndex(s => s.quiz == \"usk\");\r\n  let next_test = props.sets[test - 1][current_number + 1];\r\n\r\n  \r\n \r\n\r\n  return (\r\n    <>\r\n    <div className=\"logo\">\r\n    <img src={logo}/>\r\n      <Steps current={ques}>\r\n        <Step />\r\n        {StepEl}\r\n      </Steps>\r\n\r\n      \r\n    </div>\r\n      {ques == 0 ? (\r\n        <Intro test={test} \r\n        \r\n        />\r\n      ) : (\r\n        <Ques\r\n          numer_of_questions={questions.length}\r\n          numer_of_question={ques}\r\n          ques={questions[ques - 1]}\r\n          setUsk={props.setUskAnswers}\r\n          id={test}\r\n          token={props.token || localStorage.getItem(\"token\")}\r\n          next_test={next_test}\r\n          setSetDone={props.setSetDone}\r\n         \r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { token: state.authPage.token, sets: state.home.sets };\r\n};\r\n\r\n\r\nclass Usk extends React.Component {\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <U {...this.props}/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setUskAnswers, getTests, setSetDone})(Usk);","import { Button, Form, Radio } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../hol/Hol.css\";\r\n\r\nconst Intro = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"test_1\">{`Тест №${props.test}`}</div>\r\n      <div className=\"test_2\">\r\n      Вам будут представлены два множества,\r\nв которых представлены геометрические фигуры.\r\n      </div>\r\n\r\n      <div className=\"test_time\">Этот тест на время!</div>\r\n      <div className=\"test_3\">\r\n      Найдите кажной фигуре первого множества соответствующую фигуру из второго.\r\n      </div>\r\n\r\n      <div className=\"test_4\">\r\n      Выбрать вариант можно при помощи мыши. Подтвердить выбор можно через двойной щелчок или кнопки “Продолжить”.\r\n      </div>\r\n      <Button type=\"primary\"onClick={() => props.setCount(true)} >\r\n        <Link to={`/${props.test}/gatb-5/1`}>Все понятно!</Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","export default __webpack_public_path__ + \"static/media/cat_icon.b7c80534.svg\";","export default __webpack_public_path__ + \"static/media/dogs_icon.422b0b37.svg\";","import { Button, Progress } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../hol/Hol.css\";\r\nimport cat from \"./icons/cat_icon.svg\";\r\nimport dog from \"./icons/dogs_icon.svg\";\r\n\r\nconst Ques = (props) => {\r\n  let navigate = useNavigate();\r\n\r\n  let progress = Math.round(\r\n    (props.numer_of_question / props.numer_of_questions) * 100\r\n  );\r\n\r\n  let [active, setActive] = useState(null);\r\n  let [done, setDone] = useState([]);\r\n\r\n  const onFinish = () => {\r\n    props.setGatb(props.id, props.token, { result: done.length || 0 });\r\n\r\n    if (props.numer_of_question !== props.numer_of_questions) {\r\n      navigate(`/${props.id}/gatb-5/${props.numer_of_question + 1}`);\r\n    } else if (\r\n      props.numer_of_question === props.numer_of_questions &&\r\n      props.next_test\r\n    ) {\r\n      navigate(`/${props.id}/${props.next_test.quiz}/0`);\r\n    } else {\r\n      props.setSetDone(props.id, 100, new Date(), \"completed\");\r\n      navigate(\"/home\");\r\n    }\r\n  };\r\n\r\n  if (!props.isActive) {\r\n    onFinish();\r\n  }\r\n\r\n  window.active = active;\r\n  window.done = done;\r\n\r\n  let onImgClick = (e) => {\r\n    if (!active) {\r\n      return setActive([\r\n        e.currentTarget.dataset.icon,\r\n        e.currentTarget.dataset.wrapper,\r\n      ]);\r\n    } else if (e.currentTarget.dataset.icon == active[0]) {\r\n      setDone([...done, active[0]]);\r\n      setActive(null);\r\n    }\r\n    console.log(e.currentTarget.dataset.icon);\r\n    console.log(active);\r\n    console.log(done);\r\n  };\r\n\r\n  let checkActive = (icon, wrapper) => {\r\n    if (active && active[1] == wrapper) {\r\n      return false;\r\n    } else if (done && done.includes(icon)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ques_name\">\r\n        Найдите соответствующие фигуры в обоих множествах\r\n      </div>\r\n\r\n      <Progress\r\n        style={{\r\n          width: \"630px\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          display: \"block\",\r\n          marginBottom: \"65px\",\r\n        }}\r\n        percent={progress}\r\n      />\r\n\r\n      <div className=\"icons_wrapper\">\r\n        <div className={props.isActive ? \"icons\" : \"not_active icons\"}>\r\n          <img\r\n            src={cat}\r\n            data-icon=\"cat\"\r\n            data-wrapper=\"1\"\r\n            onClick={onImgClick}\r\n            className={\r\n              checkActive(\"cat\", \"1\") ? \"active icon\" : \"not_active icon\"\r\n            }\r\n          />\r\n          <img\r\n            src={dog}\r\n            data-icon=\"dog\"\r\n            data-wrapper=\"1\"\r\n            onClick={onImgClick}\r\n            className={\r\n              checkActive(\"dog\", \"1\") ? \"active icon\" : \"not_active icon\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"icons\">\r\n          <img\r\n            src={cat}\r\n            data-icon=\"cat\"\r\n            data-wrapper=\"2\"\r\n            onClick={onImgClick}\r\n            className={\r\n              checkActive(\"cat\", \"2\") ? \"active icon\" : \"not_active icon\"\r\n            }\r\n          />\r\n          <img\r\n            src={dog}\r\n            data-icon=\"dog\"\r\n            data-wrapper=\"2\"\r\n            onClick={onImgClick}\r\n            className={\r\n              checkActive(\"dog\", \"2\") ? \"active icon\" : \"not_active icon\"\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Button type=\"primary\" onClick={onFinish} style={{ marginTop: \"56px\" }}>\r\n        Продолжить\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ques;\r\n","let questions = [\r\n  {\r\n    index: 1,\r\n  }\r\n];\r\n\r\nexport default questions;\r\n","import { Button, Steps } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nimport logo from \"../../home/Rectangle 1.svg\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Intro from \"./Intro\";\r\nimport Ques from \"./Ques\";\r\nimport \"../hol/Hol.css\";\r\nimport questions from \"./questions\";\r\nimport { setGatbAnswers, setSetDone } from \"../../../redux/test-reducer\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst Gatb = (props) => {\r\n  let [count, setCount] = useState(false);\r\n  let params = useParams();\r\n\r\n  let test = parseInt(params.test);\r\n\r\n  let ques = parseInt(params.ques);\r\n  let StepEl = questions.map((q) => {\r\n    return <Step key={`${q.index}`} />;\r\n  });\r\n\r\n  let current_number = props.sets[test - 1].findIndex(\r\n    (s) => s.quiz == \"gatb-5\"\r\n  );\r\n  let next_test = props.sets[test - 1][current_number + 1];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo\">\r\n        <img src={logo} />\r\n        <Steps current={ques}>\r\n          <Step />\r\n          {StepEl}\r\n        </Steps>\r\n\r\n        <CountdownCircleTimer\r\n          isPlaying={count}\r\n          onComplete={() => {\r\n            setCount(false)\r\n          }}\r\n          duration={120}\r\n          colors={[\r\n            [\"#1890FF\", 0.33],\r\n            [\"#faad14\", 0.33],\r\n            [\"#ff4d4f\", 0.33],\r\n          ]}\r\n        >\r\n          {({ remainingTime }) => <div className=\"time\">{remainingTime}</div>}\r\n        </CountdownCircleTimer>\r\n\r\n        \r\n      </div>\r\n      {ques == 0 ? (\r\n        <Intro test={test} setCount={setCount} />\r\n      ) : (\r\n        <Ques\r\n          numer_of_questions={questions.length}\r\n          numer_of_question={ques}\r\n          ques={questions[ques - 1]}\r\n          setGatb={props.setGatbAnswers}\r\n          id={test}\r\n          token={props.token || localStorage.getItem(\"token\")}\r\n          next_test={next_test}\r\n          setSetDone={props.setSetDone}\r\n          isActive={count}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { token: state.authPage.token, sets: state.home.sets };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setGatbAnswers, setSetDone })(Gatb);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport AuthPage from \"./pages/auth/AuthPage\";\nimport store from \"./redux/redux-store\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport RegPage from \"./pages/registration/RegPage\";\nimport Home from \"./pages/home/Home\";\nimport Hol from \"./pages/tests/hol/Hol\";\nimport Usk from \"./pages/tests/usk/Usk\";\nimport Gatb from \"./pages/tests/gatb/Gatb\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Provider store={store}>\n          <Routes>\n            <Route path=\"/\" element={<RegPage />} />\n            <Route path=\"/auth\" element={<AuthPage />} />\n            <Route path=\"/home\" element={<Home />} />\n            <Route path=\":test/hol/:ques\" element={<Hol />} />\n            <Route path=\":test/usk/:ques\" element={<Usk />} />\n            <Route path=\":test/gatb-5/:ques\" element={<Gatb />} />\n          </Routes>\n        </Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nwindow.store = store;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}